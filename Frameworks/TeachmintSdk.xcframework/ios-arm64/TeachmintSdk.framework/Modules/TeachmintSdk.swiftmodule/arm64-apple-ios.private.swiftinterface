// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name TeachmintSdk
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import AVKit
import CallKit
import Combine
import CoreMedia
import DeveloperToolsSupport
import Foundation
import MobileCoreServices
import Network
import PDFKit
import ReplayKit
import Swift
import SwiftUI
@_exported import TeachmintSdk
import UIKit
import UniformTypeIdentifiers
import VideoToolbox
import WebRTC
import _AVKit_SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol TeachmintRoomViewDelegate : AnyObject {
  func onMeetingEnded(reason: Swift.String, recording: Swift.Bool, study_material: Swift.Bool, session_id: Swift.String?)
  func trackEvent(eventName: Swift.String, eventData: [Swift.String : Swift.String])
}
@_Concurrency.MainActor @preconcurrency public struct TMEvaasBuilder : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(delegate: (any TeachmintSdk.TeachmintRoomViewDelegate)?, suiteName: Swift.String?, url: Swift.String, language: Swift.String, host: Swift.String? = nil, preferred_extension: Swift.String? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s12TeachmintSdk14TMEvaasBuilderV4bodyQrvp", 0) __
}
final public class screenShareBuilder {
  public init(suiteName: Swift.String)
  final public func startShare(_ instance: ReplayKit.RPBroadcastSampleHandler)
  final public func stopShare()
  final public func processBuffer(_ sampleBuffer: CoreMedia.CMSampleBuffer, with sampleBufferType: ReplayKit.RPSampleBufferType)
  @objc deinit
}
extension TeachmintSdk.TMEvaasBuilder : Swift.Sendable {}
